<?php
#
# DO NOT EDIT THIS FILE
# ---------------------
# You would lose your changes when you upgrade your site. Use php widgets instead.
#


if (  post_password_required() )
	return;


global $comments_captions;
global $show_pings;

#
# Extract pings
#

$pings = separate_comments($comments);
$coms = $pings['comment'];
$pings = $pings['pings'];


echo '<div id="comments">' . "\n";

#
# Display comments
#
if ( $coms ) {
	semiologic_display_comments( );
} # if $comments


# Display pings
if ( $show_pings  && $pings ) {
	semiologic_display_pings();
}

echo '</div><!-- #comments -->' . "\n";

#
# Display comment form
#

if ( comments_open() && !( isset($_GET['action']) && $_GET['action'] == 'print' ) ) {
//	semiologic_display_comment_form();
	;
} # comments_open()


function semiologic_display_comments() {

	global $comments_captions;

    if ( have_comments() ) {
		$title = the_title('', '', false);

		$caption = $comments_captions['comments_on'];
		$caption = sprintf($caption, $title);

		if ( comments_open() && !( isset($_GET['action']) && $_GET['action'] == 'print' ) ) {

			$comment_form_link = ' <span class="comment_entry">'
				. '<a href="#respond" title="' . esc_attr($comments_captions['leave_comment']) . '" class="no_icon">'
				. '<img src="' . sem_url . '/icons/pixel.gif" height="16" width="16" alt="' . esc_attr($comments_captions['leave_comment']) . '" />'
				. '</a>'
				. '</span>';
		}
		else {
			$comment_form_link = false;
		}

		echo '<div class="comments_header">' . "\n"
			. '<h2 class="comments_title">' . $caption . $comment_form_link . '</h2>' . "\n"
			. '</div>' . "\n";

	?>
	<?php if ( get_comment_pages_count() > 1 && get_option( 'page_comments' ) ) : // are there comments to navigate through ?>
	<nav id="comment-nav-above" class="comment-navigation" role="navigation">
		<div class="nav-previous"><?php previous_comments_link( __( '&larr; Older Comments', 'sem-pinnacle' ) ); ?></div>
		<div class="nav-next"><?php next_comments_link( __( 'Newer Comments &rarr;', 'sem-pinnacle' ) ); ?></div>
	</nav><!-- #comment-nav-above -->
	<?php endif; // check for comment navigation ?>

	<ol class="comment-list">
		<?php
			wp_list_comments( array(
				'type'        => 'comment',
				'style'      => 'ul',
				'short_ping' => true,
				'avatar_size' => 60,
				'max_depth' => 4,
				'callback' => 'semiologic_display_comments_callback'
			) );
		?>
	</ol><!-- .comment-list -->

	<?php if ( get_comment_pages_count() > 1 && get_option( 'page_comments' ) ) : // are there comments to navigate through ?>
	<nav id="comment-nav-below" class="comment-navigation" role="navigation">
		<div class="nav-previous"><?php previous_comments_link( __( '&larr; Older Comments', 'sem-pinnacle' ) ); ?></div>
		<div class="nav-next"><?php next_comments_link( __( 'Newer Comments &rarr;', 'sem-pinnacle' ) ); ?></div>
	</nav><!-- #comment-nav-below -->
	<?php endif; // check for comment navigation ?>

<?php } // have_comments() ?>

<?php
	// If comments are closed and there are comments, let's leave a little note, shall we?
	if ( ! comments_open() && '0' != get_comments_number() && post_type_supports( get_post_type(), 'comments' ) ) :
?>
	<p class="no-comments"><?php __( 'Comments are closed.', 'sem-pinnacle' ); ?></p>
<?php endif; ?>

	<?php comment_form(); ?>

<?php

}

function semiologic_display_comments_callback( $comment, array $args, $depth  ) {

	global $comments_captions;
?>
	<<?php echo 'li'; ?> id="comment-<?php comment_ID(); ?>" <?php comment_class( empty( $args['has_children'] ) ? '' : 'parent' ); ?>>
		<article id="div-comment-<?php comment_ID(); ?>" class="comment-body">
			<footer class="comment-meta">
				<div class="comment-author vcard">
					<?php if ( 0 != $args['avatar_size'] ) echo get_avatar( $comment, $args['avatar_size'] ); ?>
					<?php printf( __( '%s <span class="says">says:</span>', 'sem-pinnacle' ), sprintf( '<b class="fn">%s</b>', get_comment_author_link() ) ); ?>
				</div><!-- .comment-author -->

				<div class="comment-metadata">
					<a href="<?php echo esc_url( get_comment_link( $comment->comment_ID, $args ) ); ?>">
						<time datetime="<?php comment_time( 'c' ); ?>">
							<?php printf( _x( '%1$s at %2$s', '1: date, 2: time' ), get_comment_date(), get_comment_time() ); ?>
						</time>
					</a>

					<div class="comment-actions">
						<?php edit_comment_link( __( 'Edit', 'sem-pinnacle' ), '<span class="edit-link">', '</span>' ); ?>

						<div class="reply reply_comment">
							<?php comment_reply_link(
								array_merge( $args, array(
										'add_below' => 'div-comment',
										'depth' => $depth,
										'max_depth' => $args['max_depth'],
										'reply_text' => $comments_captions['reply_link'],
								) ) ); ?>
						</div><!-- .reply -->
					</div><!-- .comment_actions -->
				</div><!-- .comment-metadata -->

				<?php if ( '0' == $comment->comment_approved ) : ?>
				<p class="comment-awaiting-moderation"><?php __( 'Your comment is awaiting moderation.', 'sem-pinnacle' ); ?></p>
				<?php endif; ?>
			</footer><!-- .comment-meta -->

			<div class="comment-content">
				<?php comment_text(); ?>
			</div><!-- .comment-content -->
		</article><!-- .comment-body -->
<?php
}

function semiologic_display_pings( ) {

	global $comments_captions;

//	$title = the_title('', '', false);

	$caption = $comments_captions['pings_on'];
//	$caption = sprintf($caption, $title);

	echo '<div class="pings_header">' . "\n"
		. '<h2>' . $caption . '</h2>' . "\n"
		. '</div>' . "\n";


	echo '<ol class="pings_list">' . "\n";

	$args = array(
		'style' => 'ul',
		'type' => 'pings',
	);

	wp_list_comments( $args );

	echo '</ol> <!-- pings_list -->' . "\n";
}

/**
 * semiologic_pings_callback()
 *
 * Comment callback for pings
 *
 * @param stdClass $comment Comment object.
 * @param array    $args    Comment args.
 * @param integer  $depth   Depth of current comment.
 */
function semiologic_pings_callback( $comment, array $args, $depth ) {

	echo '<li id="comment-' . get_comment_ID() . '" ';
		comment_class();
		echo '<p>';
        comment_author_link();
		echo edit_comment_link( __( '(Edit)', 'sem-pinnacle' ), '<span class="edit-link">', '</span>' )
        . '</p>'
		. '</li>' . "\n";
}


function semiologic_display_comment_form() {

	global $comments_captions;
	global $user_ID;
	global $user_identity;
	global $post;
	global $req;
	global $comment_author_email;
	global $comment_author;
	global $comment_author_url;

	echo '<div id="respond">' . "\n";

	echo '<div class="comments_header">' . "\n"
		. '<h2>' . $comments_captions['leave_comment'] . '</h2>' . "\n";

	echo '<p class="cancel_comment_reply">'
		. '<a id="cancel-comment-reply-link" href="#respond" style="display:none;">'
		. __('Click here to cancel reply.', 'sem-pinnacle')
		. '</a>'
		. '</p>' . "\n";

	echo '</div>' . "\n";

	if ( get_option('comment_registration') && !$user_ID ) {
		$login_url = '<span class="login">'
			. apply_filters('loginout',
				'<a href="' . esc_url(wp_login_url(apply_filters('the_permalink', get_permalink()))) . '">' . __('Login', 'sem-pinnacle') . '</a>'
				)
			. '</span>';

		echo '<div class="comments_login">' . "\n"
			. '<p>'
			. sprintf($comments_captions['login_required'], $login_url)
			. '</p>' . "\n"
			. '</div>' . "\n";
	} else {
		echo '<form method="post" id="commentform"'
			. ' action="' . trailingslashit(site_url()) . 'wp-comments-post.php"'
			. '>' . "\n";

		if ( $comments_captions['policy'] )
			echo apply_filters('widget_text', wpautop($comments_captions['policy']));

		if ( $user_ID ) {
			$logout_url = '<span class="logout">'
				. apply_filters('loginout',
					'<a href="' . esc_url(wp_logout_url(apply_filters('the_permalink', get_permalink()))) . '">' . __('Logout', 'sem-pinnacle') . '</a>'
					)
				. '</span>';

			$identity = '<span class="signed_in_author">'
				. '<a href="' . trailingslashit(site_url()) . 'wp-admin/profile.php">'
				. $user_identity
				. '</a>'
				. '</span>';

			echo '<p>'
				. sprintf($comments_captions['logged_in_as'], $identity, $logout_url)
				. '</p>' . "\n";
		} else {
			echo '<p class="comment_label name_label">'
				. '<label for="author">'
				. $comments_captions['name_field']
				. ( $req
					? ' (*)'
					: ''
					)
				. '</label>'
				. '</p>' . "\n";

			echo '<p class="comment_field name_field">'
				. '<input type="text" name="author" id="author"'
					. ' value="' . esc_attr($comment_author) . '" />'
				. '</p>' . "\n";

			echo '<div class="spacer"></div>' . "\n";

			echo '<p class="comment_label email_label">'
				. '<label for="email">'
				. $comments_captions['email_field']
				. ( $req
					? ' (*)'
					: ''
					)
				. '</label>'
				. '</p>' . "\n";

			echo '<p class="comment_field email_field">'
				. '<input type="text" name="email" id="email"'
					. ' value="' . esc_attr($comment_author_email) . '" />'
				. '</p>' . "\n";

			echo '<div class="spacer"></div>' . "\n";

			echo '<p class="comment_label url_label">'
				. '<label for="url">'
				. $comments_captions['url_field']
				. '</label>'
				. '</p>' . "\n";

			echo '<p class="comment_field url_field">'
				. '<input type="text" name="url" id="url"'
					. ' value="' . esc_attr($comment_author_url) . '" />'
				. '</p>' . "\n";

			echo '<div class="spacer"></div>' . "\n";
		} # if ( $user_ID )

		if ( !$user_ID && $req ) {
			echo '<p>'
				.  $comments_captions['required_fields']
				. '</p>' . "\n";
		}

		# Subscribe to comments

		if ( function_exists('show_subscription_checkbox') && has_filter('comment_form', 'show_subscription_checkbox') ) {
			remove_action('comment_form', 'show_subscription_checkbox');
			show_subscription_checkbox();
		}

		# WP Review Site support

		if ( function_exists('ratings_input_table') && has_filter('comment_form', 'ratings_input_table') ) {
			remove_action('comment_form', 'ratings_input_table');
			ratings_input_table();
		}

		echo '<textarea name="comment" id="comment" cols="48" rows="10"></textarea>' . "\n";

		echo '<p class="submit">'
			. '<input name="submit" type="submit" id="submit" class="button"'
				. ' value="' . esc_attr($comments_captions['submit_field']) . '"'
				. ' />'
			. '</p>' . "\n";

		comment_id_fields();

		do_action('comment_form', $post->ID);

		echo '</form>' . "\n";

		if ( function_exists('show_manual_subscription_form') ) {
			show_manual_subscription_form();
		}
	} # get_option('comment_registration') && !$user_ID

	echo '</div><!-- #respond -->' . "\n";
}